// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.



#include "Spool.h"
#include "Commands/MoveSpoolCommand.h"
#include "../RobotMap.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PID
Spool::Spool() : Subsystem("Spool") {
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PID

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	spoolMotor = RobotMap::spoolSpoolMotor;
	limitSwitchUp = RobotMap::spoolLimitSwitchUp;
	limitSwitchDown = RobotMap::spoolLimitSwitchDown;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

	// Use these to get going:
	// SetSetpoint() -  Sets where the PID controller should move the system
	//                  to
	// Enable() - Enables the PID controller.
}

void Spool::InitDefaultCommand() {
	// Set the default command for a subsystem here.
	//setDefaultCommand(new MySpecialCommand());
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	SetDefaultCommand(new MoveSpoolCommand());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}

void Spool::MoveSpoolDown(float input){
	spoolMotor->Set(input);
}

void Spool::MoveSpoolUp(float input){
	spoolMotor-> Set(input * -1);
}

void Spool::MoveSpool(Joystick* joystick)
{

	if(joystick->GetRawAxis(2) != 0)
	{
		if(RobotMap::spoolLimitSwitchUp->Get() == false)
		{
		spoolMotor->Set(0);
		}
		else
		{
		spoolMotor->Set(joystick->GetRawAxis(2));
		}
	}
	else
	{
		if(RobotMap::spoolLimitSwitchDown->Get() == false)
		{
		spoolMotor->Set(0);
		}
		else
		{
		spoolMotor->Set(joystick->GetRawAxis(3) * -1);
		}
	}

}
