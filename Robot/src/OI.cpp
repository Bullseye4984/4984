// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include <Commands/PickupBinAndMoveForwardCommandGroup.h>
#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/DriveToAutoZoneCommand.h"
#include "Commands/DrivetoAutoZone2Command.h"
#include "Commands/MoveForkIn.h"
#include "Commands/MoveForkOut.h"
#include "Commands/MoveSpoolCommand.h"
#include "Commands/ShutForksFromOutsideCommand.h"
#include "Commands/ShutForksFromTouchingCommand.h"
#include "Commands/TankDriveCommand.h"
#include "Commands/RaiseForksCommand.h"
#include "Commands/PickupBinAndMoveForwardCommandGroup.h"
#include "Commands/CloseForkWithTimeoutCommand.h"
#include "Commands/ShutForkOnBinCommand.h"
#include "Commands/PickupTrashBinAndMoveForwardCommandGroup.h"
#include "Commands/ResetCommandGroup.h"


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

OI::OI(){
	// Process operator interface input here.
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

	driver = new Joystick(0);
	
	robotOperator = new Joystick(1);
	
	moveForkOutButton = new JoystickButton(robotOperator, 5);
	moveForkOutButton->WhileHeld(new MoveForkOut());
	moveForkInButton = new JoystickButton(robotOperator, 6);
	moveForkInButton->WhileHeld(new MoveForkIn());
     

        // SmartDashboard Buttons
	SmartDashboard::PutData("Drive To Auto Zone Command", new DriveToAutoZoneCommand());

	SmartDashboard::PutData("Tank Drive Command", new TankDriveCommand());

	SmartDashboard::PutData("Move Spool Command", new MoveSpoolCommand());

	SmartDashboard::PutData("Drive to Auto Zone 2 Command", new DrivetoAutoZone2Command());

	SmartDashboard::PutData("Move Fork Out", new MoveForkOut());

	SmartDashboard::PutData("Move Fork In", new MoveForkIn());

	SmartDashboard::PutData("Shut Forks From Touching Command", new ShutForksFromTouchingCommand());

	SmartDashboard::PutData("Shut Forks From Outside Command", new ShutForksFromOutsideCommand());

	SmartDashboard::PutData("Raise Forks Command", new RaiseForksCommand());

	SmartDashboard::PutData("Pickup Bin And Move Forward CommandGroup", new PickupBinAndMoveForwardCommandGroup());

	SmartDashboard::PutData("Close Forks With Timeout Command", new CloseForkWithTimeoutCommand());

	SmartDashboard::PutData("Close Forks Onto Trash Bin", new ShutForkOnBinCommand());

	SmartDashboard::PutData("Pickup Trash Bin And Move Forward Command Group", new PickupTrashBinAndMoveForwardCommandGroup());

	SmartDashboard::PutData("Reset", new ResetCommandGroup());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	Robot::sendableChooser->AddObject("Trash Bin Loaded", new PickupTrashBinAndMoveForwardCommandGroup());
	Robot::sendableChooser->AddDefault("Tote Loaded", new PickupBinAndMoveForwardCommandGroup());
	SmartDashboard::PutData("Fork Position", Robot::sendableChooser);
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

Joystick* OI::getDriver() {
	return driver;
}

Joystick* OI::getRobotOperator() {
	return robotOperator;
}


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
